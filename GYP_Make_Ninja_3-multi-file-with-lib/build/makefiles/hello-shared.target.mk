# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := hello-shared
DEFS_Default :=

# Flags passed to all source files.
CFLAGS_Default := \
	-fPIC

# Flags passed to only C files.
CFLAGS_C_Default :=

# Flags passed to only C++ files.
CFLAGS_CC_Default :=

INCS_Default := \
	-I$(srcdir)/include

OBJS := \
	$(obj).target/$(TARGET)/include/print.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Default :=

LIBS :=

$(obj).target/libhello-shared.so: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/libhello-shared.so: LIBS := $(LIBS)
$(obj).target/libhello-shared.so: LD_INPUTS := $(OBJS)
$(obj).target/libhello-shared.so: TOOLSET := $(TOOLSET)
$(obj).target/libhello-shared.so: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink)

all_deps += $(obj).target/libhello-shared.so
# Add target alias
.PHONY: hello-shared
hello-shared: $(builddir)/lib.target/libhello-shared.so

# Copy this to the shared library output path.
$(builddir)/lib.target/libhello-shared.so: TOOLSET := $(TOOLSET)
$(builddir)/lib.target/libhello-shared.so: $(obj).target/libhello-shared.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/lib.target/libhello-shared.so
# Short alias for building this shared library.
.PHONY: libhello-shared.so
libhello-shared.so: $(obj).target/libhello-shared.so $(builddir)/lib.target/libhello-shared.so

# Add shared library to "all" target.
.PHONY: all
all: $(builddir)/lib.target/libhello-shared.so

